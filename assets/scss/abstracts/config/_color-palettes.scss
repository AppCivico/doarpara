@use 'sass:map';
@use 'sass:color';


$_red: hsl(339, 100%, 46%);
$_light-red: hsl(0, 100%, 78%);
$_light-blue: hsl(198, 95%, 52%);
$_blue: hsl(222, 100%, 57%);
$_purple: hsl(247, 67%, 48%);
$_dark-blue: hsl(247, 96%, 21%);


////
/// This file contains all application-wide Sass color palettes
///
/// @group config-palettes
/// @prop {map} color - Map of colors
/// @todo Customize to match the needs of your design.
////

/// Store all available colors and tones.
///
/// @access private
///
/// @prop {color | map} color.tone - Pure colors or returned color value of functions
///
$palette: () !default;

$accent-color: $_blue !default;

///
/// @colors base
///
$base: (
  'accent': $accent-color,
);
$palette: map.set($palette, 'base', $base);

$primary: $_blue;
$secondary: $_dark-blue;
$tertiary: $_light-blue;

///
/// @colors brand
///
$brand: (
  'primary': $primary,
  'secondary': $secondary,
  'tertiary': $tertiary,
);
$palette: map.set($palette, 'brand', $brand);

///
/// @colors neutral
///
$neutral: (
  'white': hsl(0, 0%, 100%),
  'x-light': hsl(195, 25%, 97%),
  'light': hsl(202, 15%, 90%),
  'base': hsl(224, 10%, 58%),
  'dark': hsl(210, 9%, 38%),
  'x-dark': hsl(220, 6%, 20%),
  'black': hsl(200, 20%, 9%)
);
$palette: map.set($palette, 'neutral', $neutral);


///
/// @colors text
///
$text: (
  'dark': map.get($neutral, 'black'),
  'title': map.get($neutral, 'black'),
  'faded': map.get($neutral, 'dark'),
  'light': map.get($neutral, 'x-light'),
  'quotes': map.get($neutral, 'dark'),
);
$palette: map.set($palette, 'text', $text);

///
/// @colors anchor
///
$anchor: (
  'base': $_blue,
  'link': $_blue,
  'visited': $_dark-blue,
  'hover': $_purple,
  'focus': $_purple,
  'active': $_purple,
);
$palette: map.set($palette, 'anchor', $anchor);


///
/// @colors button
///
$button: (
  'base': map.get($neutral, 'white'),
  'hover': rgb(229, 241, 251),
  'focus': map.get($brand, 'primary'),
  'slider': hsl(0, 0%, 40%),
  'submit': map.get($brand, 'primary'),
  'reset': transparent,
);
$palette: map.set($palette, 'button', $button);


///
/// @colors feedback
///
$feedback: ( // TO-DO
  'default': rgb(119, 119, 119),
  'primary': rgb(51, 122, 183),
  'success': rgb(66, 133, 66),
  'info': rgb(60, 127, 145),
  'warning': rgb(240, 173, 78),
  'danger': rgb(217, 83, 79),
);
$palette: map.set($palette, 'feedback', $feedback);


///
/// @colors border
///
$border: (
  'base': map.get($neutral, 'light'),
  'focus': map.get($base, 'accent'),
);
$palette: map.set($palette, 'border', $border);


///
/// @colors disabled
///
$disabled: (
  'foreground': map.get($text, 'faded'),
  'background': map.get($neutral, 'x-light'),
);
$palette: map.set($palette, 'disabled', $disabled);


///
/// @colors loading
///
$loading: (
  'foreground': map.get($neutral, 'x-dark'),
  'background': map.get($neutral, 'x-light'),
  'gradient-list': ($_red, $_light-red, $_light-blue, $_blue, $_purple, $_dark-blue),
  'pulsing-list': ($tertiary, $primary, $tertiary),
);
$palette: map.set($palette, 'loading', $loading);


///
/// @colors placeholder
///
$placeholder: (
  'base': map.get($neutral, 'dark'),
  'focus': map.get($neutral, 'base'),
);
$palette: map.set($palette, 'placeholder', $placeholder);


///
/// @colors effects
///
$effects: ( // TO-DO
  'backdrop': rgba(0, 0, 0, 0.5),
  'shadow': color.adjust($_dark-blue, $alpha: -0.8),
  'tap-highlight': color.adjust($_dark-blue, $alpha: -0.9),
  'target-highlight': rgb(255, 255, 102),
  'error-gradient': (map.get($feedback, 'danger'), $_red),
);
$palette: map.set($palette, 'effects', $effects);


///
/// @colors selection
///
$selection: ( // TO-DO
  'foreground': rgb(255, 255, 255),
  'background': rgb(20, 105, 140),
);
$palette: map.set($palette, 'selection', $selection);


///
/// @colors mark
///
$mark: ( // TO-DO
  'foreground': rgb(51, 51, 51),
  'background': rgb(215, 255, 90),
);
$palette: map.set($palette, 'mark', $mark);
