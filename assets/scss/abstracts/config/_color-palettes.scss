@use 'sass:map';
@use 'sass:color';

$_light-blue: hsl(198, 95%, 52%);
$_blue: hsl(222, 100%, 57%);
$_dark-blue: hsl(247, 96%, 21%);
$_purple: hsl(247, 67%, 48%);

$_light-green: hsl(157, 100%, 41%);
$_green: hsl(169, 100%, 26%);
$_dark-green: hsl(185, 85%, 18%);

$_light-orange: hsl(30, 100%, 73%);
$_orange: hsl(23, 100%, 67%);
$_dark-orange: hsl(20, 100%, 41%);

$_light-red: hsl(0, 100%, 78%);
$_red: hsl(339, 100%, 46%);
$_dark-red: hsl(339, 100%, 27%);

////
/// This file contains all application-wide Sass color palettes
///
/// @group config-palettes
/// @prop {map} color - Map of colors
/// @todo Customize to match the needs of your design.
////

/// Store all available colors and tones.
///
/// @access private
///
/// @prop {color | map} color.tone - Pure colors or returned color value of functions
///
$palette: () !default;

$accent-color: $_blue !default;

///
/// @colors base
///
$base: (
  'accent': $accent-color,
);
$palette: map.set($palette, 'base', $base);

///
/// @colors brand
///
$brand: (
  'primary': $_blue,
  'secondary': $_dark-blue,
  'tertiary': $_light-blue,
  'quaternary': $_purple,
);
$palette: map.set($palette, 'brand', $brand);

$green-theme: (
  'primary': $_green,
  'secondary': $_dark-green,
  'tertiary': $_light-green,
  'quaternary': $_dark_green,
);
$palette: map.deep-merge($palette, ('green-theme': ('brand': $green-theme)));
$orange-theme: (
  'primary': $_orange,
  'secondary': $_dark-orange,
  'tertiary': $_light-orange,
  'quaternary': $_dark_orange,
);
$palette: map.deep-merge($palette, ('orange-theme': ('brand': $orange-theme)));
$red-theme: (
  'primary': $_red,
  'secondary': $_dark-red,
  'tertiary': $_light-red,
  'quaternary': $_dark-red,
);
$palette: map.deep-merge($palette, ('red-theme': ('brand': $red-theme)));

///
/// @colors neutral
///
$neutral: (
  'white': hsl(0, 0%, 100%),
  'x-light': hsl(195, 25%, 97%),
  'light': hsl(202, 15%, 90%),
  'base': hsl(224, 10%, 58%),
  'dark': hsl(210, 9%, 38%),
  'x-dark': hsl(220, 6%, 20%),
  'black': hsl(200, 20%, 9%),
);
$palette: map.set($palette, 'neutral', $neutral);

///
/// @colors text
///
$text: (
  'dark': map.get($neutral, 'black'),
  'title': map.get($neutral, 'black'),
  'faded': map.get($neutral, 'base'),
  'light': map.get($neutral, 'x-light'),
  'quotes': map.get($neutral, 'dark'),
);
$palette: map.set($palette, 'text', $text);

///
/// @colors anchor
///
$anchor: (
  'base': $_blue,
  'link': $_blue,
  'visited': $_dark-blue,
  'hover': $_purple,
  'focus': $_purple,
  'active': $_purple,
);
$palette: map.set($palette, 'anchor', $anchor);

$palette: map.deep-merge($palette, ('green-theme':(
  'anchor': (
    'base': $_green,
    'link': $_green,
    'visited': $_dark-green,
    'hover': $_light-green,
    'focus': $_light-green,
    'active': $_light-green,
  )
)));
$palette: map.deep-merge($palette, ('orange-theme':(
  'anchor': (
    'base': $_orange,
    'link': $_orange,
    'visited': $_dark-orange,
    'hover': $_light-orange,
    'focus': $_light-orange,
    'active': $_light-orange,
  )
)));
$palette: map.deep-merge($palette, ('red-theme':(
  'anchor': (
    'base': $_red,
    'link': $_red,
    'visited': $_dark-red,
    'hover': $_light-red,
    'focus': $_light-red,
    'active': $_light-red,
  )
)));


///
/// @colors button
///
$button: (
  'base': map.get($neutral, 'white'),
  'hover': rgb(229, 241, 251),
  'focus': map.get($brand, 'primary'),
  'slider': hsl(0, 0%, 40%),
  'submit': map.get($brand, 'primary'),
  'reset': transparent,
);
$palette: map.set($palette, 'button', $button);

$palette: map.deep-merge($palette, ('green-theme': (
  'button': (
    'focus': map.get($green-theme, 'primary'),
    'submit': map.get($green-theme, 'primary'),
  )
)));
$palette: map.deep-merge($palette, ('orange-theme': (
  'button': (
    'focus': map.get($orange-theme, 'primary'),
    'submit': map.get($orange-theme, 'primary'),
  )
)));
$palette: map.deep-merge($palette, ('red-theme': (
  'button': (
    'focus': map.get($red-theme, 'primary'),
    'submit': map.get($red-theme, 'primary'),
  )
)));


///
/// @colors signage
///
$signage: ( // TO-DO
  'default': rgb(119, 119, 119),
  'primary': rgb(51, 122, 183),
  'success': rgb(66, 133, 66),
  'info': rgb(60, 127, 145),
  'warning': rgb(240, 173, 78),
  'danger': rgb(217, 83, 79),
);
$palette: map.set($palette, 'signage', $signage);


///
/// @colors border
///
$border: (
  'base': map.get($neutral, 'light'),
  'focus': map.get($base, 'accent'),
);
$palette: map.set($palette, 'border', $border);

$palette: map.deep-merge($palette, ('green-theme': (
  'border': (
    'focus': map.get($green-theme, 'primary'),
  )
)));
$palette: map.deep-merge($palette, ('orange-theme': (
  'border': (
    'focus': map.get($orange-theme, 'primary'),
  )
)));
$palette: map.deep-merge($palette, ('red-theme':(
  'border': (
    'focus': map.get($red-theme, 'primary'),
  )
)));

///
/// @colors disabled
///
$disabled: (
  'foreground': map.get($text, 'faded'),
  'background': map.get($neutral, 'x-light'),
);
$palette: map.set($palette, 'disabled', $disabled);


///
/// @colors loading
///
$loading: (
  'foreground': map.get($neutral, 'x-dark'),
  'background': map.get($neutral, 'x-light'),
  'gradient-list': ($_red, $_light-red, $_light-blue, $_blue, $_purple, $_dark-blue),
  'pulsing-list': ($_light-blue, $_blue, $_light-blue),
);
$palette: map.set($palette, 'loading', $loading);

$palette: map.deep-merge($palette, ('green-theme' : (
  'loading' : (
    'pulsing-list': ($_dark-green, $_green, $_dark-green),
  )
)));
$palette: map.deep-merge($palette, ('orange-theme' : (
  'loading' : (
    'pulsing-list': ($_dark-orange, $_orange, $_dark-orange),
  )
)));
$palette: map.deep-merge($palette, ('red-theme' : (
  'loading' : (
    'pulsing-list': ($_dark-red, $_red, $_dark-red),
  )
)));


///
/// @colors placeholder
///
$placeholder: (
  'base': map.get($neutral, 'dark'),
  'focus': map.get($neutral, 'base'),
);
$palette: map.set($palette, 'placeholder', $placeholder);


///
/// @colors effects
///
$effects: ( // TO-DO
  'backdrop': rgba(0, 0, 0, 0.5),
  'shadow': color.adjust($_dark-blue, $alpha: -0.8),
  'tap-highlight': color.adjust($_dark-blue, $alpha: -0.9),
  'target-highlight': rgb(255, 255, 102),
  'error-gradient': (map.get($signage, 'danger'), $_red),
);
$palette: map.set($palette, 'effects', $effects);

$palette: map.deep-merge($palette, ('green-theme': (
  'effects': (
    'shadow': color.adjust($_dark-green, $alpha: -0.8),
    'tap-highlight': color.adjust($_dark-green, $alpha: -0.9),
  ),
)));
$palette: map.deep-merge($palette, ('orange-theme': (
  'effects': (
    'shadow': color.adjust($_dark-orange, $alpha: -0.8),
    'tap-highlight': color.adjust($_dark-orange, $alpha: -0.9),
  ),
)));
$palette: map.deep-merge($palette, ('red-theme': (
  'effects': (
    'shadow': color.adjust($_dark-red, $alpha: -0.8),
    'tap-highlight': color.adjust($_dark-red, $alpha: -0.9),
  ),
)));


///
/// @colors selection
///
$selection: ( // TO-DO
  'foreground': rgb(255, 255, 255),
  'background': rgb(20, 105, 140),
);
$palette: map.set($palette, 'selection', $selection);


///
/// @colors mark
///
$mark: ( // TO-DO
  'foreground': rgb(51, 51, 51),
  'background': rgb(215, 255, 90),
);
$palette: map.set($palette, 'mark', $mark);
